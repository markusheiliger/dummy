name: .NET Core

on: [push]

env:
  BUILD_CONFIGURATION: Release

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Checkout Tags
      run: git fetch -t
        
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.6.1
      with:
          versionSpec: '5.1.x'

    - name: Setup GitVersion (config)
      run: |
        PRERELEASETAG=$([ -z "$(git describe --tags --exact-match $(git rev-parse HEAD) 2> /dev/null)" ] && echo "beta-" || echo "''" )
        sed -i "s/^next-version:.*$/next-version: $(git describe --always --abbrev=0 --tags)/" GitVersion.yml 
        sed -i "s/tag: ''.*$/tag: $PRERELEASETAG/" GitVersion.yml 
        cat GitVersion.yml

    - name: Execute GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.6.1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.101'
        
    - name: Setup Nuget
      run: sed -i 's/GITHUB_TOKEN/${{ secrets.GITHUB_TOKEN }}/g' nuget.config
      working-directory: ./dummy

    - name: Build and Package
      run:  |
        echo ${GITHUB_REF##*/}
        echo ${GITHUB_REF#refs/heads/}
        VERSION_PREFIX="${{ steps.gitversion.outputs.majorMinorPatch }}"
        VERSION_SUFFIX="${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
        VERSION_SUFFIX=$([ "${GITHUB_REF##*/}" = "master" ] && echo "$VERSION_SUFFIX" || echo "alpha-$VERSION_SUFFIX" )
        dotnet build -c $BUILD_CONFIGURATION -p:VersionPrefix="$VERSION_PREFIX" --version-suffix "$VERSION_SUFFIX"
      working-directory: ./dummy

    - name: Push packages to GitHub 
      run: dotnet nuget push ./bin/$BUILD_CONFIGURATION/*.nupkg --source 'github' --skip-duplicate
      working-directory: ./dummy

